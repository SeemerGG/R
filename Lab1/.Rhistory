runif(3, "1960-01-01", "1985-01-01")
sample(seq(as.Date('1960/01/01'), as.Date('1985/01/01'), by="day"), 12)
df$BithYear <- sample(seq(as.Date('1960/01/01'), as.Date('1985/01/01'), by="year"), 20)
df$BithYear <- sample(seq(as.Date('1960'), as.Date('1985'), by="year"), 20)
df$BithYear <- sample(seq(as.Date('1960'), as.Date('1985'), by="day"), 20)
df$BithYear <- sample(seq(as.Date('1960'), as.Date('1985'), by="day"), 20)
as.Date('1960/01/01') + as.Date('0018/00/00')
as.Date('1960/01/01') + 18
as.Date('1960/01/01') + 18:0:0
as.Date('1960/01/01') + 18%Y
as.Date('1960/01/01')$year + 18
x <- as.Date('1960/01/01')
x$year + 18
x$year
x
x + "0018/00/00"
x + as.Date("0018/00/00")
x + as.Date("0018/00/00", date)
x + as.Date("0018/00/00", by="day")
df <- data.frame(Nrow = c(1:20), Name = c("Vova", "Oleg", "Olaf", "KsinJu", "Roma", "SirGay", "Xinju", "Chan", "Boris", "Ravik","Vova1", "Oleg1", "Olaf1", "KsinJu1", "Roma1", "SirGay1", "Xinju1", "Chan1", "Boris1", "Ravik1"))
df$BithYear <- sample(seq(as.Date('1960/01/01'), as.Date('1985/01/01'), by="day"), 20)
df$EmployYear <- sample(seq(df$BithYear + 365*18 , as.Date('2006/01/01'), by="day"), 20)
df$EmployYear <- sample(seq((df$BithYear + 365*18) , as.Date('2006/01/01'), by="day"), 20)
x
x + 18
x + 365*18
df$BithYear
df[,df$BithYear]
df[1,df$BithYear]
df[2, df[2,]]
df[2, df[2,]  > 18]
df$EmployYear <- sample(seq((df$BithYear %in%  + 365*18) , as.Date('2006/01/01'), by="day"), 20)
df$EmployYear <- sample(seq((df$BithYear %in% vec  + 365*18) , as.Date('2006/01/01'), by="day"), 20)
df$EmployYear <- sample(seq((df[df$BithYear %in% vec,]  + 365*18) , as.Date('2006/01/01'), by="day"), 20)
df$EmployYear <- sample(seq((df[df$BithYear %in%,]  + 365*18) , as.Date('2006/01/01'), by="day"), 20)
df$EmployYear <- sample(seq((df[df$BithYear %in%]  + 365*18) , as.Date('2006/01/01'), by="day"), 20)
df[df$BithYear %in%]  + 365*18)
df[df$BithYear %in%]
df[df$BithYear %in%,]
df[df$BithYear %in%, 1]
df[df$BithYear %in% vec]
df[df$BithYear %in% vec,]
df$BithYear %in% c(1, 4)
df$BithYear %in%
2
df$BithYear %in% vec
df$BithYear %in% + 19
#Известно, что в таблице хранятся показатели по 3 странам за 5 лет (см. рис).
#Создайте вектор, который мог бы послужить столбцом country в этой
#таблице. Создайте вектор, который мог бы послужить столбцом year в этой таблице.
country <- rep(seq('Italy', 'France', 'Spain'), 5)
#Известно, что в таблице хранятся показатели по 3 странам за 5 лет (см. рис).
#Создайте вектор, который мог бы послужить столбцом country в этой
#таблице. Создайте вектор, который мог бы послужить столбцом year в этой таблице.
country <- rep(c('Italy', 'France', 'Spain'), 5)
country
print(country, drop = false)
country.sort
sort(country)
#Известно, что в таблице хранятся показатели по 3 странам за 5 лет (см. рис).
#Создайте вектор, который мог бы послужить столбцом country в этой
#таблице. Создайте вектор, который мог бы послужить столбцом year в этой таблице.
country <- sort(rep(c('Italy', 'France', 'Spain'), 5))
country
#Известно, что в таблице хранятся показатели по 3 странам за 5 лет (см. рис).
#Создайте вектор, который мог бы послужить столбцом country в этой
#таблице. Создайте вектор, который мог бы послужить столбцом year в этой таблице.
df <- data.frame(country = sort(rep(c('Italy', 'France', 'Spain'), 5)))
seq.Date(as.Date('2000/01/01'), as.Date('2004/01/01'), by="year")
df$year <- seq.Date(as.Date('2000/01/01'), as.Date('2004/01/01'), by="year")
df
(7+14)%14
#21.Создать 5 векторов с характеристиками автомобилей – вес, емкость двигателя, тип коробки
#передач, максимальная скорость, тип кузова. Создать из нах data.frame, в качестве названий
#присвоить марки автомобилей. Выбрать только автомбили с одинаковым объемом двигателя,
#упорядочить их по алфавиту. Определить число строк и столбцов созданного набора данных.
ves <- sample(seq(1000, 5000, by=100), 5)
ves
volume <- sample(seq(1.8, 4, by=0,5),5)
volume <- sample(seq(1.8, 4, by=0.5),5)
volume
typeBox <- sample(c("auto", "meh"), 5)
typeBox <- sample(seq("auto", "meh"), 5)
sample(c("auto", "meh"), 5)
x <- c("a", "m")
x
sample(x,size = 5)
sample(x,size = 5, replace = TRUE)
typeBox <- sample(c("auto", "meh"), 5, replace = TRUE)
maxSpeed <- sample(seq(160, 280, by = 10), 5)
typeCase <- sample(c('sedan', 'cupe', 'pickap', 'hetchback'), size = 5, replace = TRUE)
cars <- data.frame(ves = ves, volume = volume, typeBox = typeBox, maxSpeed = maxSpeed, typeCase = typeCase)
cars
cars <- data.frame(name = c('toyota tigr', 'jip longbow', 'tayota maracasi', 'espaniola radrigis', 'espaniola gonsales'),ves = ves, volume = volume, typeBox = typeBox, maxSpeed = maxSpeed, typeCase = typeCase)
cars
#library(data.table)
#cars <- data.table(cars)
print(cars)
#library(data.table)
#cars <- data.table(cars)
print(cars$name)
#library(data.table)
#cars <- data.table(cars)
print(cars[cars$volume > 2])
#library(data.table)
#cars <- data.table(cars)
print(cars[cars[cars$volume] > 2])
#library(data.table)
#cars <- data.table(cars)
print(cars[cars[cars$volume] <2])
#library(data.table)
#cars <- data.table(cars)
print(cars[,cars[["volume"]] < 2])
#library(data.table)
#cars <- data.table(cars)
print(cars[,cars[,["volume"]] < 2])
#library(data.table)
#cars <- data.table(cars)
print(cars[,cars[volume] < 2])
#library(data.table)
#cars <- data.table(cars)
print(cars[,cars$volume < 2])
cars[,2]
#library(data.table)
#cars <- data.table(cars)
print(cars[,cars$volume > 2])
cars$volume > 2
duplicated(cars$volume)
df[6,1]
df
cars[6,3]
cars
cars[1,3]
cars[1,3] <- 1.8
duplicated(cars$volume)
cars[,duplicated(cars$volume)]]
cars[,duplicated(cars$volume)]
cars[duplicated(cars$volume),]
duplicated(cars)
duplicated(cars$volume)
anyDuplicated(cars$volume)
cars$volume[,anyDuplicated(cars$volume)]
cars$volume[anyDuplicated(cars$volume)]
print(cars[,cars$volume = cars$volume[anyDuplicated(cars$volume)]])
print(cars[,cars$volume == cars$volume[anyDuplicated(cars$volume)]])
print(cars[,cars$volume == cars$volume[anyDuplicated(cars$volume)]])
print(cars$name[cars$volume == cars$volume[anyDuplicated(cars$volume)]])
print(cars[cars$name[cars$volume == cars$volume[anyDuplicated(cars$volume)]]])
print(cars[cars$name[cars$volume == cars$volume[anyDuplicated(cars$volume)]])
print(cars[cars$name[cars$volume == cars$volume[anyDuplicated(cars$volume)]]])
print(cars[,cars$name[cars$volume == cars$volume[anyDuplicated(cars$volume)]]])
print(cars$name[cars$volume == cars$volume[anyDuplicated(cars$volume)]])
print(cars[cars$volume == cars$volume[anyDuplicated(cars$volume)]])
print(cars[[cars$volume == cars$volume[anyDuplicated(cars$volume)]]])
print(cars[cars$volume == cars$volume[anyDuplicated(cars$volume)]])
print(cars$name[cars$volume == cars$volume[anyDuplicated(cars$volume)]])
print(sort(cars$name[cars$volume == cars$volume[anyDuplicated(cars$volume)]]))
print(length(cars))
print(length(cars[,]))
print(length(cars.obj))
print(length.(cars))
nrow(cars)
